<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.yzt.mapper.ProductMapper">
    
    <resultMap type="Product" id="ProductResult">
        <result property="productId"    column="product_id"    />
        <result property="supplierId"    column="supplier_id"    />
        <result property="productName"    column="product_name"    />
        <result property="warehouseCode"    column="warehouse_code"    />
        <result property="model"    column="model"    />
        <result property="unit"    column="unit"    />
        <result property="price"    column="price"    />
        <result property="inventory"    column="inventory"    />
        <result property="image"    column="image"    />
        <result property="status"    column="status"    />
        <result property="note"    column="note"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
        <collection property="supplier" ofType="com.ruoyi.yzt.domain.Supplier" column="supplier_id">
            <id column="supplier_id" property="supplierId" />
            <result column="supplier_name" property="supplierName" />
        </collection>
    </resultMap>

    <sql id="selectProductVo">
        select product_id, supplier_id, product_name, warehouse_code, model, unit, price, inventory, image, status, note, create_time, update_time from product
    </sql>

    <select id="selectProductList" parameterType="Product" resultMap="ProductResult">
        <!--<include refid="selectProductVo"/>-->
        select p.product_id, p.supplier_id, p.product_name, p.warehouse_code, p.model, p.unit, p.price, p.inventory, p.image, p.status, p.note, p.create_time, p.update_time, s.supplier_id, s.supplier_name from product p, supplier s

        <where>  
            <!--<if test="supplierId != null "> and supplier_id = #{supplierId}</if>-->
            <if test="productName != null  and productName != ''"> and p.product_name like concat('%', #{productName}, '%')</if>
            <if test="warehouseCode != null  and warehouseCode != ''"> and warehouse_code like concat('%', #{warehouseCode}, '%')</if>
            <if test="model != null  and model != ''"> and p.model like concat('%', #{model}, '%')</if>
            <if test="unit != null  and unit != ''"> and p.unit = #{unit}</if>
            <if test="price != null "> and p.price = #{price}</if>
            <if test="inventory != null "> and p.inventory = #{inventory}</if>
            <if test="image != null  and image != ''"> and p.image = #{image}</if>
            <if test="status != null and status != ''"> and p.status = #{status}</if>
            <if test="note != null  and note != ''"> and p.note = #{note}</if>
            <if test="supplier.supplierName != null  and supplier.supplierName != ''"> and s.supplier_name like concat('%', #{supplier.supplierName}, '%')</if>
            and p.supplier_id=s.supplier_id
        </where>
        order by p.product_id desc
    </select>
    
    <select id="selectProductById" parameterType="Integer" resultMap="ProductResult">
        <include refid="selectProductVo"/>
        where product_id = #{productId}
    </select>
        
    <insert id="insertProduct" parameterType="Product" useGeneratedKeys="true" keyProperty="productId">
        insert into product
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="supplierId != null">supplier_id,</if>
            <if test="productName != null">product_name,</if>
            <if test="warehouseCode != null">warehouse_code,</if>
            <if test="model != null">model,</if>
            <if test="unit != null">unit,</if>
            <if test="price != null">price,</if>
            <if test="inventory != null">inventory,</if>
            <if test="image != null">image,</if>
            <if test="status != null">status,</if>
            <if test="note != null">note,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="supplierId != null">#{supplierId},</if>
            <if test="productName != null">#{productName},</if>
            <if test="warehouseCode != null">#{warehouseCode},</if>
            <if test="model != null">#{model},</if>
            <if test="unit != null">#{unit},</if>
            <if test="price != null">#{price},</if>
            <if test="inventory != null">#{inventory},</if>
            <if test="image != null">#{image},</if>
            <if test="status != null">#{status},</if>
            <if test="note != null">#{note},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateProduct" parameterType="Product">
        update product
        <trim prefix="SET" suffixOverrides=",">
            <if test="supplierId != null">supplier_id = #{supplierId},</if>
            <if test="productName != null">product_name = #{productName},</if>
            <if test="warehouseCode != null">warehouse_code = #{warehouseCode},</if>
            <if test="model != null">model = #{model},</if>
            <if test="unit != null">unit = #{unit},</if>
            <if test="price != null">price = #{price},</if>
            <if test="inventory != null">inventory = #{inventory},</if>
            <if test="image != null">image = #{image},</if>
            <if test="status != null">status = #{status},</if>
            <if test="note != null">note = #{note},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where product_id = #{productId}
    </update>

    <delete id="deleteProductById" parameterType="Integer">
        delete from product where product_id = #{productId}
    </delete>

    <delete id="deleteProductByIds" parameterType="String">
        delete from product where product_id in 
        <foreach item="productId" collection="array" open="(" separator="," close=")">
            #{productId}
        </foreach>
    </delete>
    
</mapper>